package Trilemma;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import Trilemma.EXP_TABLE;
import Trilemma.TOWN;
import Trilemma.PEOPLE;
import Trilemma.DUNGEON;
import Trilemma.MONSTER;
import Trilemma.M_ACTION_STATUS;
import Trilemma.M_SKILL_TYPE;
import Trilemma.SKILL;
import Trilemma.LEARNED_SKILL;
import Trilemma.PLAYER_SKILL;
import Trilemma.PLAYER_STATUS;
import Trilemma.STORY_FLAG;
import Trilemma.WEAPON;
import Trilemma.ARMOR;
import Trilemma.WEAPON_INVENTORY;
import Trilemma.ARMOR_INVENTORY;

import Trilemma.EXP_TABLEDao;
import Trilemma.TOWNDao;
import Trilemma.PEOPLEDao;
import Trilemma.DUNGEONDao;
import Trilemma.MONSTERDao;
import Trilemma.M_ACTION_STATUSDao;
import Trilemma.M_SKILL_TYPEDao;
import Trilemma.SKILLDao;
import Trilemma.LEARNED_SKILLDao;
import Trilemma.PLAYER_SKILLDao;
import Trilemma.PLAYER_STATUSDao;
import Trilemma.STORY_FLAGDao;
import Trilemma.WEAPONDao;
import Trilemma.ARMORDao;
import Trilemma.WEAPON_INVENTORYDao;
import Trilemma.ARMOR_INVENTORYDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig eXP_TABLEDaoConfig;
    private final DaoConfig tOWNDaoConfig;
    private final DaoConfig pEOPLEDaoConfig;
    private final DaoConfig dUNGEONDaoConfig;
    private final DaoConfig mONSTERDaoConfig;
    private final DaoConfig m_ACTION_STATUSDaoConfig;
    private final DaoConfig m_SKILL_TYPEDaoConfig;
    private final DaoConfig sKILLDaoConfig;
    private final DaoConfig lEARNED_SKILLDaoConfig;
    private final DaoConfig pLAYER_SKILLDaoConfig;
    private final DaoConfig pLAYER_STATUSDaoConfig;
    private final DaoConfig sTORY_FLAGDaoConfig;
    private final DaoConfig wEAPONDaoConfig;
    private final DaoConfig aRMORDaoConfig;
    private final DaoConfig wEAPON_INVENTORYDaoConfig;
    private final DaoConfig aRMOR_INVENTORYDaoConfig;

    private final EXP_TABLEDao eXP_TABLEDao;
    private final TOWNDao tOWNDao;
    private final PEOPLEDao pEOPLEDao;
    private final DUNGEONDao dUNGEONDao;
    private final MONSTERDao mONSTERDao;
    private final M_ACTION_STATUSDao m_ACTION_STATUSDao;
    private final M_SKILL_TYPEDao m_SKILL_TYPEDao;
    private final SKILLDao sKILLDao;
    private final LEARNED_SKILLDao lEARNED_SKILLDao;
    private final PLAYER_SKILLDao pLAYER_SKILLDao;
    private final PLAYER_STATUSDao pLAYER_STATUSDao;
    private final STORY_FLAGDao sTORY_FLAGDao;
    private final WEAPONDao wEAPONDao;
    private final ARMORDao aRMORDao;
    private final WEAPON_INVENTORYDao wEAPON_INVENTORYDao;
    private final ARMOR_INVENTORYDao aRMOR_INVENTORYDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        eXP_TABLEDaoConfig = daoConfigMap.get(EXP_TABLEDao.class).clone();
        eXP_TABLEDaoConfig.initIdentityScope(type);

        tOWNDaoConfig = daoConfigMap.get(TOWNDao.class).clone();
        tOWNDaoConfig.initIdentityScope(type);

        pEOPLEDaoConfig = daoConfigMap.get(PEOPLEDao.class).clone();
        pEOPLEDaoConfig.initIdentityScope(type);

        dUNGEONDaoConfig = daoConfigMap.get(DUNGEONDao.class).clone();
        dUNGEONDaoConfig.initIdentityScope(type);

        mONSTERDaoConfig = daoConfigMap.get(MONSTERDao.class).clone();
        mONSTERDaoConfig.initIdentityScope(type);

        m_ACTION_STATUSDaoConfig = daoConfigMap.get(M_ACTION_STATUSDao.class).clone();
        m_ACTION_STATUSDaoConfig.initIdentityScope(type);

        m_SKILL_TYPEDaoConfig = daoConfigMap.get(M_SKILL_TYPEDao.class).clone();
        m_SKILL_TYPEDaoConfig.initIdentityScope(type);

        sKILLDaoConfig = daoConfigMap.get(SKILLDao.class).clone();
        sKILLDaoConfig.initIdentityScope(type);

        lEARNED_SKILLDaoConfig = daoConfigMap.get(LEARNED_SKILLDao.class).clone();
        lEARNED_SKILLDaoConfig.initIdentityScope(type);

        pLAYER_SKILLDaoConfig = daoConfigMap.get(PLAYER_SKILLDao.class).clone();
        pLAYER_SKILLDaoConfig.initIdentityScope(type);

        pLAYER_STATUSDaoConfig = daoConfigMap.get(PLAYER_STATUSDao.class).clone();
        pLAYER_STATUSDaoConfig.initIdentityScope(type);

        sTORY_FLAGDaoConfig = daoConfigMap.get(STORY_FLAGDao.class).clone();
        sTORY_FLAGDaoConfig.initIdentityScope(type);

        wEAPONDaoConfig = daoConfigMap.get(WEAPONDao.class).clone();
        wEAPONDaoConfig.initIdentityScope(type);

        aRMORDaoConfig = daoConfigMap.get(ARMORDao.class).clone();
        aRMORDaoConfig.initIdentityScope(type);

        wEAPON_INVENTORYDaoConfig = daoConfigMap.get(WEAPON_INVENTORYDao.class).clone();
        wEAPON_INVENTORYDaoConfig.initIdentityScope(type);

        aRMOR_INVENTORYDaoConfig = daoConfigMap.get(ARMOR_INVENTORYDao.class).clone();
        aRMOR_INVENTORYDaoConfig.initIdentityScope(type);

        eXP_TABLEDao = new EXP_TABLEDao(eXP_TABLEDaoConfig, this);
        tOWNDao = new TOWNDao(tOWNDaoConfig, this);
        pEOPLEDao = new PEOPLEDao(pEOPLEDaoConfig, this);
        dUNGEONDao = new DUNGEONDao(dUNGEONDaoConfig, this);
        mONSTERDao = new MONSTERDao(mONSTERDaoConfig, this);
        m_ACTION_STATUSDao = new M_ACTION_STATUSDao(m_ACTION_STATUSDaoConfig, this);
        m_SKILL_TYPEDao = new M_SKILL_TYPEDao(m_SKILL_TYPEDaoConfig, this);
        sKILLDao = new SKILLDao(sKILLDaoConfig, this);
        lEARNED_SKILLDao = new LEARNED_SKILLDao(lEARNED_SKILLDaoConfig, this);
        pLAYER_SKILLDao = new PLAYER_SKILLDao(pLAYER_SKILLDaoConfig, this);
        pLAYER_STATUSDao = new PLAYER_STATUSDao(pLAYER_STATUSDaoConfig, this);
        sTORY_FLAGDao = new STORY_FLAGDao(sTORY_FLAGDaoConfig, this);
        wEAPONDao = new WEAPONDao(wEAPONDaoConfig, this);
        aRMORDao = new ARMORDao(aRMORDaoConfig, this);
        wEAPON_INVENTORYDao = new WEAPON_INVENTORYDao(wEAPON_INVENTORYDaoConfig, this);
        aRMOR_INVENTORYDao = new ARMOR_INVENTORYDao(aRMOR_INVENTORYDaoConfig, this);

        registerDao(EXP_TABLE.class, eXP_TABLEDao);
        registerDao(TOWN.class, tOWNDao);
        registerDao(PEOPLE.class, pEOPLEDao);
        registerDao(DUNGEON.class, dUNGEONDao);
        registerDao(MONSTER.class, mONSTERDao);
        registerDao(M_ACTION_STATUS.class, m_ACTION_STATUSDao);
        registerDao(M_SKILL_TYPE.class, m_SKILL_TYPEDao);
        registerDao(SKILL.class, sKILLDao);
        registerDao(LEARNED_SKILL.class, lEARNED_SKILLDao);
        registerDao(PLAYER_SKILL.class, pLAYER_SKILLDao);
        registerDao(PLAYER_STATUS.class, pLAYER_STATUSDao);
        registerDao(STORY_FLAG.class, sTORY_FLAGDao);
        registerDao(WEAPON.class, wEAPONDao);
        registerDao(ARMOR.class, aRMORDao);
        registerDao(WEAPON_INVENTORY.class, wEAPON_INVENTORYDao);
        registerDao(ARMOR_INVENTORY.class, aRMOR_INVENTORYDao);
    }
    
    public void clear() {
        eXP_TABLEDaoConfig.getIdentityScope().clear();
        tOWNDaoConfig.getIdentityScope().clear();
        pEOPLEDaoConfig.getIdentityScope().clear();
        dUNGEONDaoConfig.getIdentityScope().clear();
        mONSTERDaoConfig.getIdentityScope().clear();
        m_ACTION_STATUSDaoConfig.getIdentityScope().clear();
        m_SKILL_TYPEDaoConfig.getIdentityScope().clear();
        sKILLDaoConfig.getIdentityScope().clear();
        lEARNED_SKILLDaoConfig.getIdentityScope().clear();
        pLAYER_SKILLDaoConfig.getIdentityScope().clear();
        pLAYER_STATUSDaoConfig.getIdentityScope().clear();
        sTORY_FLAGDaoConfig.getIdentityScope().clear();
        wEAPONDaoConfig.getIdentityScope().clear();
        aRMORDaoConfig.getIdentityScope().clear();
        wEAPON_INVENTORYDaoConfig.getIdentityScope().clear();
        aRMOR_INVENTORYDaoConfig.getIdentityScope().clear();
    }

    public EXP_TABLEDao getEXP_TABLEDao() {
        return eXP_TABLEDao;
    }

    public TOWNDao getTOWNDao() {
        return tOWNDao;
    }

    public PEOPLEDao getPEOPLEDao() {
        return pEOPLEDao;
    }

    public DUNGEONDao getDUNGEONDao() {
        return dUNGEONDao;
    }

    public MONSTERDao getMONSTERDao() {
        return mONSTERDao;
    }

    public M_ACTION_STATUSDao getM_ACTION_STATUSDao() {
        return m_ACTION_STATUSDao;
    }

    public M_SKILL_TYPEDao getM_SKILL_TYPEDao() {
        return m_SKILL_TYPEDao;
    }

    public SKILLDao getSKILLDao() {
        return sKILLDao;
    }

    public LEARNED_SKILLDao getLEARNED_SKILLDao() {
        return lEARNED_SKILLDao;
    }

    public PLAYER_SKILLDao getPLAYER_SKILLDao() {
        return pLAYER_SKILLDao;
    }

    public PLAYER_STATUSDao getPLAYER_STATUSDao() {
        return pLAYER_STATUSDao;
    }

    public STORY_FLAGDao getSTORY_FLAGDao() {
        return sTORY_FLAGDao;
    }

    public WEAPONDao getWEAPONDao() {
        return wEAPONDao;
    }

    public ARMORDao getARMORDao() {
        return aRMORDao;
    }

    public WEAPON_INVENTORYDao getWEAPON_INVENTORYDao() {
        return wEAPON_INVENTORYDao;
    }

    public ARMOR_INVENTORYDao getARMOR_INVENTORYDao() {
        return aRMOR_INVENTORYDao;
    }

}
